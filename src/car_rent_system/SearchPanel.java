/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package car_rent_system;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author USER
 */
public class SearchPanel extends javax.swing.JPanel {

    Connection con;
    DB db;
    Customer customer;
    int userId;

    public SearchPanel(Connection con, DB db, Customer css) {
        initComponents();
        this.con = con;
        this.db = db;
        this.userId = Integer.parseInt(css.getSCN());
    }

    /**
     * Creates new form SearchPanel
     */
    public SearchPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        DatePickUp = new datechooser.beans.DateChooserCombo();
        DateDropOff = new datechooser.beans.DateChooserCombo();
        jLabel2 = new javax.swing.JLabel();
        PickUpBranchChooser = new javax.swing.JComboBox();
        DropOffBranchChooser = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CarTableChooser = new javax.swing.JTable();
        CarBrandChooser = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CarTypeChooser = new javax.swing.JComboBox<>();
        HandiCapCheckBox = new javax.swing.JCheckBox();
        YearModelChooser = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        RentButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Date of PickUp");

        try {
            DateDropOff.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(2019, 11, 5),
                new java.util.GregorianCalendar(2019, 11, 5))));
    } catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
        e1.printStackTrace();
    }

    jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(0, 0, 0));
    jLabel2.setText("Date of DropOff");

    PickUpBranchChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ANY", "Al-Basateen", "Al-Jamiaa", "Al-Safa", "Al-Azizyah", "Jeddah Airport" }));

    DropOffBranchChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ANY", "Al-Basateen", "Al-Jamiaa", "Al-Safa", "Al-Azizyah", "Jeddah Airport" }));

    jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(0, 0, 0));
    jLabel3.setText("PickUp Branch");

    jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(0, 0, 0));
    jLabel4.setText("DropOff  Branch");

    CarTableChooser.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Brand", "Name", "GearBox", "Number of Seats", "Price"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    CarTableChooser.setName(""); // NOI18N
    CarTableChooser.setRowHeight(20);
    jScrollPane1.setViewportView(CarTableChooser);

    CarBrandChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "KIA", "DODGE", "GMC", "BMW", "TESLA", "HONDA", "HYUNDAI", "TOYOTA", " " }));
    CarBrandChooser.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            CarBrandChooserActionPerformed(evt);
        }
    });

    jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel5.setForeground(new java.awt.Color(0, 0, 0));
    jLabel5.setText("Car Brand");

    jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(0, 0, 0));
    jLabel6.setText("Car Type");

    CarTypeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "SEDAN", "SPORT", "SUV", "LUXURY", "VAN" }));

    HandiCapCheckBox.setBackground(new java.awt.Color(204, 204, 204));
    HandiCapCheckBox.setForeground(new java.awt.Color(0, 0, 0));
    HandiCapCheckBox.setText("HandiCap");
    HandiCapCheckBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            HandiCapCheckBoxActionPerformed(evt);
        }
    });

    YearModelChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", " ", " " }));

    jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
    jLabel7.setForeground(new java.awt.Color(0, 0, 0));
    jLabel7.setText("Model Year");

    RentButton.setText("RENT");
    RentButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            RentButtonActionPerformed(evt);
        }
    });

    SearchButton.setText("SEARCH");
    SearchButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            SearchButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap(91, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(DatePickUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel5))
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(CarTypeChooser, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DateDropOff, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                                .addComponent(jLabel6)))
                        .addComponent(CarBrandChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(53, 53, 53)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(PickUpBranchChooser, 0, 155, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addComponent(YearModelChooser, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(34, 34, 34)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4)
                                .addComponent(DropOffBranchChooser, javax.swing.GroupLayout.Alignment.TRAILING, 0, 155, Short.MAX_VALUE)
                                .addComponent(HandiCapCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jLabel7))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 95, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(28, 28, 28)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DateDropOff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DatePickUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PickUpBranchChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DropOffBranchChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(jLabel6)
                .addComponent(jLabel7))
            .addGap(5, 5, 5)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(CarBrandChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(CarTypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(HandiCapCheckBox)
                .addComponent(YearModelChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(RentButton)
                .addComponent(SearchButton))
            .addContainerGap(99, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void CarBrandChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarBrandChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CarBrandChooserActionPerformed

    private void HandiCapCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HandiCapCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HandiCapCheckBoxActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed

        String branch = PickUpBranchChooser.getItemAt(PickUpBranchChooser.getSelectedIndex()).toString();
        int id = -1;
        switch (branch) {
            case "Al-Basateen":
                id = 1000;
                break;
            case "Al-Jamiaa":
                id = 1001;
                break;
            case "Al-Safa":
                id = 1002;
                break;
            case "Al-Azizyah":
                id = 1003;
                break;
            case "Jeddah Airport":
                id = 1004;
                break;
        }
        ArrayList<String> searchField = new ArrayList<String>();

        String carBrand = CarBrandChooser.getItemAt(CarBrandChooser.getSelectedIndex()).toString();
        String carType = CarTypeChooser.getItemAt(CarTypeChooser.getSelectedIndex()).toString();
        String modelYear = YearModelChooser.getItemAt(YearModelChooser.getSelectedIndex()).toString();
        boolean isHandi = HandiCapCheckBox.isSelected();
        String mysqlDateString = "";

        if (id != -1) {
            searchField.add("AND cars.branchID ='" + id + "'");

        }
        if (!carBrand.equals("ALL")) {
            searchField.add("AND car_brand ='" + carBrand + "'");
        }
        if (!carType.equals("ALL")) {
            searchField.add("AND car_type ='" + carType + "'");
        }

        if (!modelYear.equals("ALL")) {
            String d = "1/1/" + modelYear;
            Date date = new java.util.Date(d);
            String pattern = "yyyy-MM-dd";
            SimpleDateFormat formatter = new SimpleDateFormat(pattern);
            mysqlDateString = formatter.format(date);
            searchField.add("AND model_year ='" + mysqlDateString + "'");
        }

        if (isHandi) {
            searchField.add("and Handicap_support ='" + isHandi + "'");
        }

        ResultSet rs = db.search(searchField);

        CarTableChooser.setModel(resultSetToTableModel(rs));


    }//GEN-LAST:event_SearchButtonActionPerformed

    private void RentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RentButtonActionPerformed

        String pattern = "yyyy-MM-dd";
        SimpleDateFormat formatter = new SimpleDateFormat(pattern);

        String strPickupDate = DatePickUp.getText();
        Date pickUpDate = new Date(strPickupDate);

        String strDropOffDate = DateDropOff.getText();
        Date dropOffDate = new Date(strDropOffDate);

        int row = CarTableChooser.getSelectedRow();
        int pricePerDay = Integer.parseInt(CarTableChooser.getValueAt(row, 5).toString());

        long diff = dropOffDate.getTime() - pickUpDate.getTime();
        int diffDays = (int) (diff / (24 * 60 * 60 * 1000));

        int reserveId = generateReservationId(0, 100000);
        int carId = Integer.parseInt(CarTableChooser.getValueAt(row, 0).toString());
        String dropOffLoactions = DropOffBranchChooser.getItemAt(DropOffBranchChooser.getSelectedIndex()).toString();
        int totalPrice = pricePerDay * diffDays;
        strPickupDate = formatter.format(pickUpDate);
        strDropOffDate = formatter.format(dropOffDate);
        String carName = CarTableChooser.getValueAt(row, 2).toString();
        
        // String Rental_ID, Date Date_Start_rent, Date Date_Finish_Rent, Car car
        Reservation temp = new Reservation(this.userId + "" , pickUpDate, dropOffDate);

        if (db.makeReservation(reserveId, carId, this.userId, dropOffLoactions, totalPrice, strPickupDate, strDropOffDate)) {
            JOptionPane.showMessageDialog(this, "Car with Id: " + carId + " has been reserved successfully", "Success", JOptionPane.DEFAULT_OPTION);
        }

//       String BranchName=CarTableChooser.getValueAt(row, 6).toString();
        //       int branchId = 0;
        //        switch (BranchName) {
        //            case "Al-Basateen":
        //                branchId = 1000;
        //                break;
        //            case "Al-Jamiaa":
        //                branchId = 1001;
        //                break;
        //            case "Al-Safa":
        //                branchId = 1002;
        //                break;
        //            case "Al-Azizyah":
        //                branchId = 1003;
        //                break;
        //            case "Jeddah Airport":
        //                branchId = 1004;
        //                break;
        //        }

    }//GEN-LAST:event_RentButtonActionPerformed

    public int generateReservationId(int min, int max) {
        int x = (int) (Math.random() * ((max - min) + 1)) + min;
        return x;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CarBrandChooser;
    private javax.swing.JTable CarTableChooser;
    private javax.swing.JComboBox<String> CarTypeChooser;
    private datechooser.beans.DateChooserCombo DateDropOff;
    private datechooser.beans.DateChooserCombo DatePickUp;
    private javax.swing.JComboBox DropOffBranchChooser;
    private javax.swing.JCheckBox HandiCapCheckBox;
    private javax.swing.JComboBox PickUpBranchChooser;
    private javax.swing.JButton RentButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JComboBox<String> YearModelChooser;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public static TableModel resultSetToTableModel(ResultSet rs) {
        try {

            ResultSetMetaData metaData = rs.getMetaData();
            int numberOfColumns = metaData.getColumnCount();
            Vector columnNames = new Vector();

            // Get the column names
            for (int column = 0; column < numberOfColumns; column++) {
                columnNames.addElement(metaData.getColumnLabel(column + 1));
            }

            // Get all rows.
            Vector rows = new Vector();

            while (rs.next()) {
                Vector newRow = new Vector();

                for (int i = 1; i <= numberOfColumns; i++) {
                    newRow.addElement(rs.getObject(i));
                }

                rows.addElement(newRow);
            }

            return new DefaultTableModel(rows, columnNames);   // AFTER THAT INVOKE .SetModel on the JTable Object...
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

// AFTER THAT INVOKE .SetModel on the JTable Object...
}
